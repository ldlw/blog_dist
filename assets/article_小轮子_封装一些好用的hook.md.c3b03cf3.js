import{_ as s,c as a,o as e,a as t}from"./app.2ff528bf.js";const A=JSON.parse('{"title":"封装一些好用的 hooks","description":"封装一些好用的hooks","frontmatter":{"head":[["meta",{"name":"description","content":"封装一些好用的hooks"}],["meta",{"name":"keywords","content":"react、hooks"}],["script",{"src":"https://vitepress-source.oss-cn-beijing.aliyuncs.com/statistics.js"}]]},"headers":[{"level":2,"title":"useLocalStorageState","slug":"uselocalstoragestate","link":"#uselocalstoragestate","children":[{"level":3,"title":"用处","slug":"用处","link":"#用处","children":[]},{"level":3,"title":"最终目标","slug":"最终目标","link":"#最终目标","children":[]},{"level":3,"title":"Types","slug":"types","link":"#types","children":[]},{"level":3,"title":"API","slug":"api","link":"#api","children":[]},{"level":3,"title":"Params","slug":"params","link":"#params","children":[]}]}],"relativePath":"article/小轮子/封装一些好用的hook.md"}'),o={name:"article/小轮子/封装一些好用的hook.md"},l=t(`<h1 id="封装一些好用的-hooks" tabindex="-1">封装一些好用的 hooks <a class="header-anchor" href="#封装一些好用的-hooks" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">跟大家安利一个非常好用的 hooks 工具库~~</p><p><a href="https://shiheng-fe.github.io/hooks/use-loading" target="_blank" rel="noreferrer">@shihengtech/hooks</a>，是我现在所在公司的前辈自行封装的一些 hooks，其中的一些 hooks 几乎都是我目前开发的项目中的一些必备的 hooks。</p><p>学习源码，并且自己也封装了一遍，源码在：<a href="https://github.com/ldlw/hooks" target="_blank" rel="noreferrer">hooks</a></p></div><blockquote><p>因为我读源码的能力非常薄弱，大框架的源码几乎很难看懂，所以从小工具库入手学习读源码对我来说是一个非常不错的提示这一块能力的方式，所以决定自己也来在读了源码之后自行封装一下。</p></blockquote><h2 id="uselocalstoragestate" tabindex="-1">useLocalStorageState <a class="header-anchor" href="#uselocalstoragestate" aria-hidden="true">#</a></h2><p>顾名思义，和 useState 一样，会创建一个和 useState 一样的数据结构，这个数据会被保存到浏览器的<code>localStorage</code>中，通过 setSLocalStroage 也能实现页面的渲染。</p><h3 id="用处" tabindex="-1">用处 <a class="header-anchor" href="#用处" aria-hidden="true">#</a></h3><p>因为被存入到了<code>localStorage</code> 中，所以不会像<code>useState</code>这种存入内存中的数据，刷新一下就丢失数据的情况，可以实现整个应用下的数据共享与持久化。</p><h3 id="最终目标" tabindex="-1">最终目标 <a class="header-anchor" href="#最终目标" aria-hidden="true">#</a></h3><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setState</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useLocalStorageState</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">LIuWeiKey</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">setState</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">v</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div><h3 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-hidden="true">#</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">useLocalStroage</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(key: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> defaultValue</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> T </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> T)): readonly [T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> React</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Dispatch</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">React</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SetStateAction</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setState</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useLocalStorageState</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(key: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> defaultValue</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> T </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> T))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="params" tabindex="-1">Params <a class="header-anchor" href="#params" aria-hidden="true">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>key</td><td>必填，<code>localStorage</code> 存储的键值对的键值</td><td>string</td><td>-</td></tr><tr><td>defaultValue</td><td>默认值，会优先以 <code>localStorage</code> 中保存的值为准</td><td>any</td><td>()=&gt;any</td></tr></tbody></table>`,15),n=[l];function p(c,r,i,d,y,D){return e(),a("div",null,n)}const C=s(o,[["render",p]]);export{A as __pageData,C as default};
